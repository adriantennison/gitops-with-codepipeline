version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.x
      golang: 1.x
    commands:
      - echo "Setting up GOPATH and installing dependencies"
      - export GOPATH=$HOME/go
      - export PATH=$PATH:$GOPATH/bin
      - mkdir -p $GOPATH/bin
      - echo "Installing Terraform and Checkov dependencies"
      - wget https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
      - unzip terraform_1.5.0_linux_amd64.zip -d /usr/local/bin/
      - pip install --upgrade pip
      - pip install checkov
  pre_build:
    commands:
      - echo "Initializing Go module"
      - go mod init github.com/adriantennison/gitops-with-codepipeline
      - echo "Adding Terratest as a dependency"
      - go get github.com/gruntwork-io/terratest/modules/terraform@latest
      - echo "Tidying up Go modules"
      - go mod tidy
      - echo "Initializing Terraform"
      - terraform init
      # - echo "Running Checkov for compliance scanning"
      # - checkov -d .
  build:
    commands:
      - echo "Formatting Terraform code"
      - terraform fmt -check -recursive
      - echo "Validating Terraform code"
      - terraform validate
      - echo "Running Terratest"
      - cd tests && go test -v
      - echo "Applying Terraform plan"
      - terraform apply -auto-approve
  post_build:
    commands:
      - echo "Checking if Terraform destroy should run"
      - if [ "$RUN_DESTROY" == "true" ]; then terraform destroy -auto-approve; else echo "Skipping terraform destroy"; fi
